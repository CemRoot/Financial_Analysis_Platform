# Generated by Django 4.2.20 on 2025-04-08 12:55

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="IndexPrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("open", models.DecimalField(decimal_places=2, max_digits=10)),
                ("high", models.DecimalField(decimal_places=2, max_digits=10)),
                ("low", models.DecimalField(decimal_places=2, max_digits=10)),
                ("close", models.DecimalField(decimal_places=2, max_digits=10)),
                ("volume", models.BigIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="MarketIndex",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol", models.CharField(max_length=20, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("country", models.CharField(blank=True, max_length=50, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Stock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol", models.CharField(max_length=10, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("sector", models.CharField(blank=True, max_length=100, null=True)),
                ("industry", models.CharField(blank=True, max_length=100, null=True)),
                ("market_cap", models.BigIntegerField(blank=True, null=True)),
                ("website", models.URLField(blank=True, max_length=255, null=True)),
                ("exchange", models.CharField(blank=True, max_length=50, null=True)),
                ("logo_url", models.URLField(blank=True, max_length=255, null=True)),
                ("country", models.CharField(blank=True, max_length=50, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="TechnicalIndicator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                (
                    "sma_20",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "sma_50",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "sma_200",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "ema_12",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "ema_26",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "macd",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "macd_signal",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "macd_histogram",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "rsi_14",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "stoch_k",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "stoch_d",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "bollinger_upper",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "bollinger_middle",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "bollinger_lower",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("additional_indicators", models.JSONField(blank=True, default=dict)),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="indicators",
                        to="stocks.stock",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StockPrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("open", models.DecimalField(decimal_places=2, max_digits=10)),
                ("high", models.DecimalField(decimal_places=2, max_digits=10)),
                ("low", models.DecimalField(decimal_places=2, max_digits=10)),
                ("close", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "adjusted_close",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("volume", models.BigIntegerField()),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prices",
                        to="stocks.stock",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StockFinancial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("period", models.CharField(max_length=10)),
                ("year", models.IntegerField()),
                ("date", models.DateField()),
                ("revenue", models.BigIntegerField(blank=True, null=True)),
                ("gross_profit", models.BigIntegerField(blank=True, null=True)),
                ("operating_income", models.BigIntegerField(blank=True, null=True)),
                ("net_income", models.BigIntegerField(blank=True, null=True)),
                (
                    "eps",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "pe_ratio",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "dividend_yield",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "debt_to_equity",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "peg_ratio",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="financials",
                        to="stocks.stock",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StockAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("price_above", "Price Above"),
                            ("price_below", "Price Below"),
                            ("percent_change", "Percent Change"),
                            ("volume_spike", "Volume Spike"),
                            ("rsi_above", "RSI Above"),
                            ("rsi_below", "RSI Below"),
                            ("sma_cross_above", "SMA Cross Above"),
                            ("sma_cross_below", "SMA Cross Below"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("triggered", "Triggered"),
                            ("disabled", "Disabled"),
                        ],
                        default="active",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("triggered_at", models.DateTimeField(blank=True, null=True)),
                ("last_checked", models.DateTimeField(blank=True, null=True)),
                ("notify_email", models.BooleanField(default=True)),
                ("notify_browser", models.BooleanField(default=True)),
                ("additional_parameters", models.JSONField(blank=True, default=dict)),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="stocks.stock",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="stock",
            index=models.Index(fields=["symbol"], name="stocks_stoc_symbol_3e1bfd_idx"),
        ),
        migrations.AddIndex(
            model_name="stock",
            index=models.Index(fields=["sector"], name="stocks_stoc_sector_6c2055_idx"),
        ),
        migrations.AddField(
            model_name="indexprice",
            name="index",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="prices",
                to="stocks.marketindex",
            ),
        ),
        migrations.AddIndex(
            model_name="technicalindicator",
            index=models.Index(
                fields=["stock", "date"], name="stocks_tech_stock_i_67b046_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="technicalindicator",
            unique_together={("stock", "date")},
        ),
        migrations.AddIndex(
            model_name="stockprice",
            index=models.Index(
                fields=["stock", "date"], name="stocks_stoc_stock_i_86bebf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stockprice",
            index=models.Index(fields=["date"], name="stocks_stoc_date_0355dc_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="stockprice",
            unique_together={("stock", "date")},
        ),
        migrations.AddIndex(
            model_name="stockfinancial",
            index=models.Index(
                fields=["stock", "date"], name="stocks_stoc_stock_i_d3fa0a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="stockfinancial",
            index=models.Index(
                fields=["year", "period"], name="stocks_stoc_year_8c7920_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="stockfinancial",
            unique_together={("stock", "period", "year")},
        ),
        migrations.AddIndex(
            model_name="indexprice",
            index=models.Index(
                fields=["index", "date"], name="stocks_inde_index_i_1fb3a1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="indexprice",
            index=models.Index(fields=["date"], name="stocks_inde_date_6daa5e_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="indexprice",
            unique_together={("index", "date")},
        ),
    ]
